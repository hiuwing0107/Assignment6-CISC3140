;Check if an input string is a palindrome, return a boolean value
;Allow list input type
;Required implementation: Write your own reverser function

(define (palindrome? input)
  (let loop ((input (string->list input))
       (tail (reverse (string->list input))))
    (or (null? input)
      (and (char=? (car input) (car tail))
       (loop (cdr input) (cdr tail))))))

;Create a lambda expression that evaluates a sum of series given a number input n
;Combine this lambda expression with a map so that you can pass in a list of numbers
;get the sum of series that returns a list

(define (SumOfSeries n)
  (map (lambda (x) (+ x n)) '(1 3 5 7 9)))

;Error Checking

(define ErrorChecking #f
  (call-with-current-continuation (lambda (k)
      (set！ErrorChecking
        (lambda error-arguments
         (display "Error")
         (newline)
         (k error-arguments)))
        'done)))

——————————————————————————————————————

CISC 3140 - Design and Implementation 
Professor: Katherine Chuang
Student Name: Hiu Wing, Lam
Emplid: 23626630

Assignment 6 - Writing a program in Scheme